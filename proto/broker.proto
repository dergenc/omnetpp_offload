syntax = "proto3";
package service;

option go_package = "./proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

import "storage.proto";
import "opp_config.proto";

service Broker {
  rpc Assignments (stream Utilization) returns (stream Assignment) {}

  rpc Finished  (Assignment)   returns (Empty)        {}
  rpc Create    (Simulation)   returns (SimulationId) {}
  rpc AddTasks  (Tasks)        returns (Empty)        {}
  rpc SetSource (Source)       returns (Empty)        {}
  rpc GetSource (SimulationId) returns (Source)       {}
  rpc AddBinary (Binary)       returns (Empty)        {}
  rpc GetBinary (Arch)         returns (Binary)       {}
}

message Empty {}

message Assignment {
  oneof do {
    Source build = 1;
    SimulationRun run = 2;
  }
}

message Arch {
  string os = 1;
  string arch = 2;
}

message Binary {
  string simulationId = 1;
  Arch arch = 2;
  StorageRef binary = 4;
}

message Source {
  string simulationId = 1;
  StorageRef source = 2;
}

message SimulationId {
  string id = 1;
}

message ProviderId {
  string id = 1;
}

message SimulationRun {
  string simulationId = 1;
  string config = 2;
  string runNumber = 3;
  float progress = 4;
  google.protobuf.Duration executionTime = 5;
  StorageRef results = 6;
}

message Tasks {
  string simulationId = 1;
  repeated SimulationRun items = 2;
}

message Utilization {
  float cpuUsage = 1;
  float memoryUsage = 2;
  google.protobuf.Timestamp updated = 3;
}

//message ProviderState {
//  //
//  // Metadata
//  //
//
//  string providerId = 1;
//  Arch arch = 2;
//  uint32 numCPUs = 3;
//
//  //
//  // Updatable
//  //
//
//  float cpuUsage = 4;
//  float memoryUsage = 5;
//  google.protobuf.Timestamp updated = 6;
//
//  // Maybe move this to broker to prevent too many assiments
//  repeated Assignment assignments = 7;
//}

message Simulation {
  string simulationId = 1;
  string tag = 2;
  OppConfig oppConfig = 3;
}
